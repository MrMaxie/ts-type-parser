export declare const realKindName: {
    Unknown: number;
    EndOfFileToken: number;
    SingleLineCommentTrivia: number;
    MultiLineCommentTrivia: number;
    NewLineTrivia: number;
    WhitespaceTrivia: number;
    ShebangTrivia: number;
    ConflictMarkerTrivia: number;
    NumericLiteral: number;
    BigIntLiteral: number;
    StringLiteral: number;
    JsxText: number;
    JsxTextAllWhiteSpaces: number;
    RegularExpressionLiteral: number;
    NoSubstitutionTemplateLiteral: number;
    TemplateHead: number;
    TemplateMiddle: number;
    TemplateTail: number;
    OpenBraceToken: number;
    CloseBraceToken: number;
    OpenParenToken: number;
    CloseParenToken: number;
    OpenBracketToken: number;
    CloseBracketToken: number;
    DotToken: number;
    DotDotDotToken: number;
    SemicolonToken: number;
    CommaToken: number;
    QuestionDotToken: number;
    LessThanToken: number;
    LessThanSlashToken: number;
    GreaterThanToken: number;
    LessThanEqualsToken: number;
    GreaterThanEqualsToken: number;
    EqualsEqualsToken: number;
    ExclamationEqualsToken: number;
    EqualsEqualsEqualsToken: number;
    ExclamationEqualsEqualsToken: number;
    EqualsGreaterThanToken: number;
    PlusToken: number;
    MinusToken: number;
    AsteriskToken: number;
    AsteriskAsteriskToken: number;
    SlashToken: number;
    PercentToken: number;
    PlusPlusToken: number;
    MinusMinusToken: number;
    LessThanLessThanToken: number;
    GreaterThanGreaterThanToken: number;
    GreaterThanGreaterThanGreaterThanToken: number;
    AmpersandToken: number;
    BarToken: number;
    CaretToken: number;
    ExclamationToken: number;
    TildeToken: number;
    AmpersandAmpersandToken: number;
    BarBarToken: number;
    QuestionToken: number;
    ColonToken: number;
    AtToken: number;
    QuestionQuestionToken: number;
    /** Only the JSDoc scanner produces BacktickToken. The normal scanner produces NoSubstitutionTemplateLiteral and related kinds. */
    BacktickToken: number;
    EqualsToken: number;
    PlusEqualsToken: number;
    MinusEqualsToken: number;
    AsteriskEqualsToken: number;
    AsteriskAsteriskEqualsToken: number;
    SlashEqualsToken: number;
    PercentEqualsToken: number;
    LessThanLessThanEqualsToken: number;
    GreaterThanGreaterThanEqualsToken: number;
    GreaterThanGreaterThanGreaterThanEqualsToken: number;
    AmpersandEqualsToken: number;
    BarEqualsToken: number;
    BarBarEqualsToken: number;
    AmpersandAmpersandEqualsToken: number;
    QuestionQuestionEqualsToken: number;
    CaretEqualsToken: number;
    Identifier: number;
    PrivateIdentifier: number;
    BreakKeyword: number;
    CaseKeyword: number;
    CatchKeyword: number;
    ClassKeyword: number;
    ConstKeyword: number;
    ContinueKeyword: number;
    DebuggerKeyword: number;
    DefaultKeyword: number;
    DeleteKeyword: number;
    DoKeyword: number;
    ElseKeyword: number;
    EnumKeyword: number;
    ExportKeyword: number;
    ExtendsKeyword: number;
    FalseKeyword: number;
    FinallyKeyword: number;
    ForKeyword: number;
    FunctionKeyword: number;
    IfKeyword: number;
    ImportKeyword: number;
    InKeyword: number;
    InstanceOfKeyword: number;
    NewKeyword: number;
    NullKeyword: number;
    ReturnKeyword: number;
    SuperKeyword: number;
    SwitchKeyword: number;
    ThisKeyword: number;
    ThrowKeyword: number;
    TrueKeyword: number;
    TryKeyword: number;
    TypeOfKeyword: number;
    VarKeyword: number;
    VoidKeyword: number;
    WhileKeyword: number;
    WithKeyword: number;
    ImplementsKeyword: number;
    InterfaceKeyword: number;
    LetKeyword: number;
    PackageKeyword: number;
    PrivateKeyword: number;
    ProtectedKeyword: number;
    PublicKeyword: number;
    StaticKeyword: number;
    YieldKeyword: number;
    AbstractKeyword: number;
    AsKeyword: number;
    AssertsKeyword: number;
    AnyKeyword: number;
    AsyncKeyword: number;
    AwaitKeyword: number;
    BooleanKeyword: number;
    ConstructorKeyword: number;
    DeclareKeyword: number;
    GetKeyword: number;
    InferKeyword: number;
    IntrinsicKeyword: number;
    IsKeyword: number;
    KeyOfKeyword: number;
    ModuleKeyword: number;
    NamespaceKeyword: number;
    NeverKeyword: number;
    ReadonlyKeyword: number;
    RequireKeyword: number;
    NumberKeyword: number;
    ObjectKeyword: number;
    SetKeyword: number;
    StringKeyword: number;
    SymbolKeyword: number;
    TypeKeyword: number;
    UndefinedKeyword: number;
    UniqueKeyword: number;
    UnknownKeyword: number;
    FromKeyword: number;
    GlobalKeyword: number;
    BigIntKeyword: number;
    OfKeyword: number;
    QualifiedName: number;
    ComputedPropertyName: number;
    TypeParameter: number;
    Parameter: number;
    Decorator: number;
    PropertySignature: number;
    PropertyDeclaration: number;
    MethodSignature: number;
    MethodDeclaration: number;
    Constructor: number;
    GetAccessor: number;
    SetAccessor: number;
    CallSignature: number;
    ConstructSignature: number;
    IndexSignature: number;
    TypePredicate: number;
    TypeReference: number;
    FunctionType: number;
    ConstructorType: number;
    TypeQuery: number;
    TypeLiteral: number;
    ArrayType: number;
    TupleType: number;
    OptionalType: number;
    RestType: number;
    UnionType: number;
    IntersectionType: number;
    ConditionalType: number;
    InferType: number;
    ParenthesizedType: number;
    ThisType: number;
    TypeOperator: number;
    IndexedAccessType: number;
    MappedType: number;
    LiteralType: number;
    NamedTupleMember: number;
    TemplateLiteralType: number;
    TemplateLiteralTypeSpan: number;
    ImportType: number;
    ObjectBindingPattern: number;
    ArrayBindingPattern: number;
    BindingElement: number;
    ArrayLiteralExpression: number;
    ObjectLiteralExpression: number;
    PropertyAccessExpression: number;
    ElementAccessExpression: number;
    CallExpression: number;
    NewExpression: number;
    TaggedTemplateExpression: number;
    TypeAssertionExpression: number;
    ParenthesizedExpression: number;
    FunctionExpression: number;
    ArrowFunction: number;
    DeleteExpression: number;
    TypeOfExpression: number;
    VoidExpression: number;
    AwaitExpression: number;
    PrefixUnaryExpression: number;
    PostfixUnaryExpression: number;
    BinaryExpression: number;
    ConditionalExpression: number;
    TemplateExpression: number;
    YieldExpression: number;
    SpreadElement: number;
    ClassExpression: number;
    OmittedExpression: number;
    ExpressionWithTypeArguments: number;
    AsExpression: number;
    NonNullExpression: number;
    MetaProperty: number;
    SyntheticExpression: number;
    TemplateSpan: number;
    SemicolonClassElement: number;
    Block: number;
    EmptyStatement: number;
    VariableStatement: number;
    ExpressionStatement: number;
    IfStatement: number;
    DoStatement: number;
    WhileStatement: number;
    ForStatement: number;
    ForInStatement: number;
    ForOfStatement: number;
    ContinueStatement: number;
    BreakStatement: number;
    ReturnStatement: number;
    WithStatement: number;
    SwitchStatement: number;
    LabeledStatement: number;
    ThrowStatement: number;
    TryStatement: number;
    DebuggerStatement: number;
    VariableDeclaration: number;
    VariableDeclarationList: number;
    FunctionDeclaration: number;
    ClassDeclaration: number;
    InterfaceDeclaration: number;
    TypeAliasDeclaration: number;
    EnumDeclaration: number;
    ModuleDeclaration: number;
    ModuleBlock: number;
    CaseBlock: number;
    NamespaceExportDeclaration: number;
    ImportEqualsDeclaration: number;
    ImportDeclaration: number;
    ImportClause: number;
    NamespaceImport: number;
    NamedImports: number;
    ImportSpecifier: number;
    ExportAssignment: number;
    ExportDeclaration: number;
    NamedExports: number;
    NamespaceExport: number;
    ExportSpecifier: number;
    MissingDeclaration: number;
    ExternalModuleReference: number;
    JsxElement: number;
    JsxSelfClosingElement: number;
    JsxOpeningElement: number;
    JsxClosingElement: number;
    JsxFragment: number;
    JsxOpeningFragment: number;
    JsxClosingFragment: number;
    JsxAttribute: number;
    JsxAttributes: number;
    JsxSpreadAttribute: number;
    JsxExpression: number;
    CaseClause: number;
    DefaultClause: number;
    HeritageClause: number;
    CatchClause: number;
    PropertyAssignment: number;
    ShorthandPropertyAssignment: number;
    SpreadAssignment: number;
    EnumMember: number;
    UnparsedPrologue: number;
    UnparsedPrepend: number;
    UnparsedText: number;
    UnparsedInternalText: number;
    UnparsedSyntheticReference: number;
    SourceFile: number;
    Bundle: number;
    UnparsedSource: number;
    InputFiles: number;
    JSDocTypeExpression: number;
    JSDocNameReference: number;
    JSDocAllType: number;
    JSDocUnknownType: number;
    JSDocNullableType: number;
    JSDocNonNullableType: number;
    JSDocOptionalType: number;
    JSDocFunctionType: number;
    JSDocVariadicType: number;
    JSDocNamepathType: number;
    JSDocComment: number;
    JSDocTypeLiteral: number;
    JSDocSignature: number;
    JSDocTag: number;
    JSDocAugmentsTag: number;
    JSDocImplementsTag: number;
    JSDocAuthorTag: number;
    JSDocDeprecatedTag: number;
    JSDocClassTag: number;
    JSDocPublicTag: number;
    JSDocPrivateTag: number;
    JSDocProtectedTag: number;
    JSDocReadonlyTag: number;
    JSDocCallbackTag: number;
    JSDocEnumTag: number;
    JSDocParameterTag: number;
    JSDocReturnTag: number;
    JSDocThisTag: number;
    JSDocTypeTag: number;
    JSDocTemplateTag: number;
    JSDocTypedefTag: number;
    JSDocSeeTag: number;
    JSDocPropertyTag: number;
    SyntaxList: number;
    NotEmittedStatement: number;
    PartiallyEmittedExpression: number;
    CommaListExpression: number;
    MergeDeclarationMarker: number;
    EndOfDeclarationMarker: number;
    SyntheticReferenceExpression: number;
    Count: number;
    FirstAssignment: number;
    LastAssignment: number;
    FirstCompoundAssignment: number;
    LastCompoundAssignment: number;
    FirstReservedWord: number;
    LastReservedWord: number;
    FirstKeyword: number;
    LastKeyword: number;
    FirstFutureReservedWord: number;
    LastFutureReservedWord: number;
    FirstTypeNode: number;
    LastTypeNode: number;
    FirstPunctuation: number;
    LastPunctuation: number;
    FirstToken: number;
    LastToken: number;
    FirstTriviaToken: number;
    LastTriviaToken: number;
    FirstLiteralToken: number;
    LastLiteralToken: number;
    FirstTemplateToken: number;
    LastTemplateToken: number;
    FirstBinaryOperator: number;
    LastBinaryOperator: number;
    FirstStatement: number;
    LastStatement: number;
    FirstNode: number;
    FirstJSDocNode: number;
    LastJSDocNode: number;
    FirstJSDocTagNode: number;
    LastJSDocTagNode: number;
};
export declare type realKindName = typeof realKindName;
export declare const getRealKindName: (id: number) => string | false;
